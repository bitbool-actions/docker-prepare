name: "docker-prepare"
description: "prepare docker envirnoment"
inputs:
  DOCKER_REPO:
     required: true
  DOCKER_REGISTRY:
    required: false
    default: "registry.hub.docker.com"
  DOCKER_USER:
    required: true
  QEMU_SETUP:
    required: false
    default: "true"
  DOCKER_PASSWORD:
    required: true
  EXTRA_TAGS:
    required: false
    default: ""
  AWS_REGION:
    required: false
    default: "us-east-1"
  
outputs:
  tags:
    description: "tagged images"
    value: "${{ steps.meta.outputs.tags }}"
  images_with_tags:
    description: "tagged images comma separated"
    value: "${{ steps.set_outputs.outputs.IMAGES_WITH_TAGS }}"
  tags_only:
    description: "only the tags"
    value: "${{ steps.set_outputs.outputs.TAGS_ONLY }}"
  tags_only_csv:
    description: "only the tags comma separated"
    value: "${{ steps.set_outputs.outputs.TAGS_ONLY_CSV }}"  
  json:
    description: "tag json"
    value: "${{ steps.meta.outputs.json }}"
runs:
  using: "composite"
  steps:

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
      if: ${{ inputs.QEMU_SETUP == 'true' }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      if: ${{ inputs.QEMU_SETUP == 'true' }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ inputs.DOCKER_USER }}
        aws-secret-access-key: ${{ inputs.DOCKER_PASSWORD }}
        aws-region: ${{ inputs.AWS_REGION }}
      if: contains( inputs.DOCKER_REGISTRY, 'amazonaws.com')

    - name: Get AWS Registry Id
      id: aws_registry_id
      shell: bash
      run: echo AWS_REGISTRY_ID=$(echo ${{ inputs.DOCKER_REGISTRY }} | sed 's/\..*//' ) >> "$GITHUB_OUTPUT"
      if: contains( inputs.DOCKER_REGISTRY, 'amazonaws.com')

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      with:
        registries: ${{ steps.aws_registry_id.outputs.AWS_REGISTRY_ID }}
      if: contains( inputs.DOCKER_REGISTRY, 'amazonaws.com')

    - name: Login to registry
      uses: docker/login-action@v2
      with:
        registry: ${{ inputs.DOCKER_REGISTRY }}
        username: ${{ inputs.DOCKER_USER }}
        password: ${{ inputs.DOCKER_PASSWORD }}
      if: "!contains( ${{ inputs.DOCKER_REGISTRY }}, 'amazonaws.com')"

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ inputs.DOCKER_REGISTRY }}/${{ inputs.DOCKER_REPO }}
        flavor: |
          latest=true
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=ref,event=tag
          type=semver,pattern={{version}}
          type=raw,value={{date 'YYYYMMDD_HHMMSS'}}
          type=sha
          type=raw,value=${{ inputs.EXTRA_TAGS }}

    - name: set output
      id: set_outputs
      shell: bash
      run: |
        IMAGES_WITH_TAGS=$(echo "${{ steps.meta.outputs.tags }}" | tr -d '\r' | tr '\n' ' ')
        echo "IMAGES_WITH_TAGS=$IMAGES_WITH_TAGS" >> $GITHUB_OUTPUT
        TAGS_ONLY=$(echo $IMAGES_WITH_TAGS | sed 's#${{ inputs.DOCKER_REGISTRY }}/${{ inputs.DOCKER_REPO }}:##g' )
        echo "TAGS_ONLY=$TAGS_ONLY" >> $GITHUB_OUTPUT
        echo "TAGS_ONLY_CSV=$(sed -r 's/\s+/,/g' <<< `echo $TAGS_ONLY`)" >> $GITHUB_OUTPUT

    - name: print tags
      shell: bash
      run: |
        echo "IMAGES_WITH_TAGS: ${{ steps.set_outputs.outputs.IMAGES_WITH_TAGS }}"
        echo "TAGS_ONLY: ${{ steps.set_outputs.outputs.TAGS_ONLY }}"
        echo "TAGS_ONLY_CSV: ${{ steps.set_outputs.outputs.TAGS_ONLY_CSV }}"
