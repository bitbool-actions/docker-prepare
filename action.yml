name: "docker-prepare"
description: "prepare docker envirnoment"
inputs:
  DOCKER_REPO:
     required: true
  DOCKER_REGISTRY:
    required: false
    default: "registry.hub.docker.com"
  DOCKER_USER:
    required: true
  QEMU_SETUP:
    required: false
    default: "true"
  DOCKER_PASSWORD:
    required: true
outputs:
  tags:
    description: "tagged images"
    value: "${{ steps.meta.outputs.tags }}"
  images_with_tags:
    description: "tagged images comma separated"
    value: "${{ steps.set_outputs.outputs.IMAGES_WITH_TAGS }}"
  tags_only:
    description: "only the tags"
    value: "${{ steps.set_outputs.outputs.TAGS_ONLY }}"    
  json:
    description: "tag json"
    value: "${{ steps.meta.outputs.json }}"
runs:
  using: "composite"
  steps:

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
      if: ${{ inputs.QEMU_SETUP == 'true' }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      if: ${{ inputs.QEMU_SETUP == 'true' }}


    - name: Login to registry
      uses: docker/login-action@v2
      with:
        registry: ${{ inputs.DOCKER_REGISTRY }}
        username: ${{ inputs.DOCKER_USER }}
        password: ${{ inputs.DOCKER_PASSWORD }}

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ inputs.DOCKER_REGISTRY }}/${{ inputs.DOCKER_REPO }}
        flavor: |
          latest=true
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=sha


    # - name: Build and push
    #   id: docker_build
    #   uses: docker/build-push-action@v4
    #   with:
    #     context: .
    #     push: true
    #     tags: ${{ steps.meta.outputs.tags }}

    - name: set output
      id: set_outputs
      shell: bash
      run: |
        IMAGES_WITH_TAGS=$(echo "${{ steps.meta.outputs.tags }}" | tr -d '\r' | tr '\n' ' ')
        echo "IMAGES_WITH_TAGS=$IMAGES_WITH_TAGS" >> $GITHUB_OUTPUT
        echo "TAGS_ONLY=$(echo $IMAGES_WITH_TAGS | sed 's#${{ inputs.DOCKER_REGISTRY }}/${{ inputs.DOCKER_REPO }}:##g' )" >> $GITHUB_OUTPUT

    - name: print tags
      shell: bash
      run: |
        echo ${{ steps.set_outputs.outputs.IMAGES_WITH_TAGS }}
        echo ${{ steps.set_outputs.outputs.TAGS_ONLY }}
